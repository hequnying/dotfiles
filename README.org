#+TITLE: dotfiles

* .gitignore
  根据开发环境的情况，从[[https://github.com/github/gitignore][github/gitignore]]项目中复制一些.gitignore模板，拼接为一个.gitignore文件。在新建项目时，可以直接复制该.gitignore文件。

* .tmux.conf 
[[https://github.com/tmux/tmux][tmux]]在github中的介绍:

:tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen. tmux may be detached from a screen and continue running in the background, then later reattached.

概括地说:

1. tmux是可以在命令行窗口上同时显示多个命令行操作pane，在多 pane中各自输入命令行、各自显示命令行执行结果，这有利于我们一边执行某个应用，一边查看其他应用的执行情况或日志，这或许tmux给人最直观的效果。 
2. 更令人感到舒服的是tmux的Session会话支持多人同时接入、同时看到同样的会话内容。例如，某个维护人员通过`ssh user@server`登录了远程服务器，然后进入tmux，这时候，其他人员也可以通过`ssh -t user@server tmux a`就可以接入到这个维护人员的会话中。这样的功能，有利于大家一起解决问题。也就是大家所说的`Pair Programming`(协同编程、结对编程).
3. tmux在一些操作上支持vim操作模式，这对vimer来说，有更好的体验感。
4. tmux有相应的插件管理工具[[https://github.com/tmux-plugins/tpm][tmux-plugins/tpm]]，支持从github或指定仓库中下载安装插件。
5. 在[[https://github.com/tmux-plugins][https://github.com/tmux-plugins]]中，有很多插件可供学习，跟vim-sensible一样，tmux也有人写了[[https://github.com/tmux-plugins][tmux-sensible]]，我们可以通过这个项目，了解和学习.tmux.conf的最佳实践，同时，通过这个项目，我们也可以了解到相关的测试技术。
6. [[https://github.com/tmux/tmux][tmux]]是使用C语言编写的，如果我们想要学习C语言，这是一个学习C语言非常好的项目。

